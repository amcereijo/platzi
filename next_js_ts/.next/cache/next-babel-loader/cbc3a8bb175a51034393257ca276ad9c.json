{"ast":null,"code":"var _jsxFileName = \"/Users/amcereijo/Documents/git/platzi/next_js_ts/components/CartItemList/CartItemList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Item, Button, Loader, Message } from 'semantic-ui-react';\n\nconst CartItemList = ({\n  items,\n  removeFromCart,\n  loading = false\n}) => {\n  if (loading) return __jsx(Loader, {\n    active: true,\n    inline: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  });\n  if (items.length === 0) return __jsx(Message, {\n    warning: true,\n    as: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Your cart is empty\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"You will need to add some items to the cart before you can checkout.\"));\n\n  const mapCartItemsToItems = items => items.map(cartItem => {\n    const {\n      id,\n      name,\n      quantity,\n      price,\n      image\n    } = cartItem;\n    return {\n      childKey: id,\n      header: __jsx(Link, {\n        href: \"/product/[id]\",\n        as: `/product/${id}/`,\n        passHref: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, __jsx(Item.Header, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, name)),\n      image: __jsx(Item.Image, {\n        src: image,\n        alt: name,\n        size: \"small\",\n        style: {\n          background: '#f2f2f2'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }),\n      meta: `${quantity} x ${price}`,\n      description: 'Some more information goes here....',\n      extra: __jsx(Button, {\n        basic: true,\n        icon: \"remove\",\n        floated: \"right\",\n        onClick: () => removeFromCart(cartItem),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      })\n    };\n  });\n\n  return __jsx(Item.Group, {\n    divided: true,\n    items: mapCartItemsToItems(items),\n    as: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default CartItemList;","map":{"version":3,"sources":["/Users/amcereijo/Documents/git/platzi/next_js_ts/components/CartItemList/CartItemList.tsx"],"names":["React","Link","Item","Button","Loader","Message","CartItemList","items","removeFromCart","loading","length","mapCartItemsToItems","map","cartItem","id","name","quantity","price","image","childKey","header","background","meta","description","extra"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,mBAA9C;;AASA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KADoB;AAEpBC,EAAAA,cAFoB;AAGpBC,EAAAA,OAAO,GAAG;AAHU,CAAD,KAII;AACvB,MAAIA,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,MAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EACE,OACE,MAAC,OAAD;AAAS,IAAA,OAAO,MAAhB;AAAiB,IAAA,EAAE,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAFF,CADF;;AASF,QAAMC,mBAAmB,GAAIJ,KAAD,IAC1BA,KAAK,CAACK,GAAN,CAAWC,QAAD,IAAc;AACtB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAAuCL,QAA7C;AAEA,WAAO;AACLM,MAAAA,QAAQ,EAAEL,EADL;AAELM,MAAAA,MAAM,EACJ,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,eAAX;AAA2B,QAAA,EAAE,EAAG,YAAWN,EAAG,GAA9C;AAAkD,QAAA,QAAQ,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBC,IAArB,CADF,CAHG;AAOLG,MAAAA,KAAK,EACH,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,GAAG,EAAEH,IAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAE;AAAEM,UAAAA,UAAU,EAAE;AAAd,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARG;AAeLC,MAAAA,IAAI,EAAG,GAAEN,QAAS,MAAKC,KAAM,EAfxB;AAgBLM,MAAAA,WAAW,EAAE,qCAhBR;AAiBLC,MAAAA,KAAK,EACH,MAAC,MAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,OAAO,EAAE,MAAMhB,cAAc,CAACK,QAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBG,KAAP;AA0BD,GA7BD,CADF;;AAgCA,SAAO,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAoB,IAAA,KAAK,EAAEF,mBAAmB,CAACJ,KAAD,CAA9C;AAAuD,IAAA,EAAE,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlDD;;AAoDA,eAAeD,YAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { Item, Button, Loader, Message } from 'semantic-ui-react'\nimport { CartItemType } from '@store/Cart'\n\ntype CartItemListProps = {\n  items: CartItemType[]\n  removeFromCart: (product: TProduct) => void\n  loading?: boolean\n}\n\nconst CartItemList = ({\n  items,\n  removeFromCart,\n  loading = false,\n}: CartItemListProps) => {\n  if (loading) return <Loader active inline=\"centered\" />\n\n  if (items.length === 0)\n    return (\n      <Message warning as=\"section\">\n        <Message.Header>Your cart is empty</Message.Header>\n        <p>\n          You will need to add some items to the cart before you can checkout.\n        </p>\n      </Message>\n    )\n\n  const mapCartItemsToItems = (items: CartItemType[]) =>\n    items.map((cartItem) => {\n      const { id, name, quantity, price, image } = cartItem\n\n      return {\n        childKey: id,\n        header: (\n          <Link href=\"/product/[id]\" as={`/product/${id}/`} passHref>\n            <Item.Header as=\"a\">{name}</Item.Header>\n          </Link>\n        ),\n        image: (\n          <Item.Image\n            src={image}\n            alt={name}\n            size=\"small\"\n            style={{ background: '#f2f2f2' }}\n          />\n        ),\n        meta: `${quantity} x ${price}`,\n        description: 'Some more information goes here....',\n        extra: (\n          <Button\n            basic\n            icon=\"remove\"\n            floated=\"right\"\n            onClick={() => removeFromCart(cartItem)}\n          />\n        ),\n      }\n    })\n\n  return <Item.Group divided items={mapCartItemsToItems(items)} as=\"section\" />\n}\n\nexport default CartItemList\n"]},"metadata":{},"sourceType":"module"}